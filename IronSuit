ref: https://programmers.co.kr/skill_checks/121442

< 문제 정리 >
한 번에 K 칸을 앞으로 점프
(현재까지 온 거리) X 2 순간이동

순간이동은 건전지 줄지 않음
점프는 K 만큼 건전지 줄음

N 만큼 떨어진 위치로 가고자 함

목표: 건전지 사용량의 최솟값 구하기

1   1 : 1
1   2 : 1 @
2   3 : 1 @ 1
1   4 : 1 @ @
2   5 : 1 @ @ 1
2   6 : 1 @ 1 @
3   7 : 1 @ 1 @ 1
1   8 : 1 @ @ @
2   9 : 1 @ @ @ 1
2   10: 1 @ @ 1 @
2   11: 1 @ @ 1 @ 1

최소값 구하는 함수를 func이라 하자. (1 제외)
func(n) = func(n을 2로 나눈 몫) + 나머지

ex) func(37) = func(18) + 1 = func(9) + 1 = func(4) + 2 = 3


< Source Code >
import java.util.*;

public class Solution {
    
    int func(int num){
        
        if(num==1 || num==2)
            return 1;
        else{
            return func(num/2) + num%2;
        }
    }
    
    public int solution(int n) {
        int ans = 0;
    
        return func(n);
    }
}

< Comment >
ez
